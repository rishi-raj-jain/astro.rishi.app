---
import Header from '../components/Header.astro'
import BaseHead from '../components/BaseHead.astro'
import { SITE_DESCRIPTION, SITE_TITLE } from '../config'

export interface Props {
  content: {
    title?: string
    description?: string
  }
  valid: Object
}

const {
  content: { title = SITE_TITLE, description = SITE_DESCRIPTION },
  valid,
} = Astro.props
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style is:global>
      .heading_hover_hash:hover {
        cursor: pointer;
        text-decoration: underline;
      }
      .heading_hover_hash:hover::before {
        content: '#';
        opacity: 0.5;
        color: gray;
        margin-right: 10px;
      }
    </style>
  </head>

  <body class="bg-white dark:bg-black min-h-screen font-display">
    <Header />
    <main class="flex flex-col items-center text-black dark:text-gray-200">
      <div class="flex w-full max-w-[90vw] lg:max-w-[75vw] flex-col py-10 sm:px-10">
        {valid && <slot />}
      </div>
    </main>
    <script defer>
      // Add listener to sessionStorage events
      const themeChangeListener = () => {
        let sessionTheme = sessionStorage.getItem('theme')
        if (sessionTheme === 'light') {
          document.documentElement.classList.remove('dark')
        } else {
          document.documentElement.classList.add('dark')
          if (!window.setDark) {
            // Set the flag as added already
            window.setDark = true
            // Create dark.css link element
            const link = document.createElement('link')
            link.rel = 'stylesheet'
            link.href = '/css/dark.css'
            document.body.appendChild(link)
          }
        }
      }
      // Check the theme preferred in the window acc. to the zone
      const theme = (() => {
        if (typeof window !== 'undefined') {
          return window.sessionStorage.getItem('theme') || 'light'
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark'
        }
        return 'light'
      })()
      // Set the theme as light / dark
      window.sessionStorage.setItem('theme', theme)
      themeChangeListener()
      // Toggle theme function
      const toggleTheme = () => {
        let existingTheme
        if (typeof window !== 'undefined' && window.sessionStorage.getItem('theme')) {
          existingTheme = window.sessionStorage.getItem('theme')
        }
        if (existingTheme) {
          window.sessionStorage.setItem('theme', existingTheme === 'dark' ? 'light' : 'dark')
        } else {
          window.sessionStorage.setItem('theme', 'light')
        }
        themeChangeListener()
      }
    </script>
    <script defer is:inline src="/__layer0__/service-worker/install.js"></script>
    <link rel="stylesheet" href="/fonts/inter-var.woff2" media="print" onload="this.onload=null;this.media='all'" />
    {
      Astro.url.pathname.includes('/blog/') && (
        <link rel="stylesheet" href="/css/light.css" media="print" onload="this.onload=null;this.media='all'" />
      )
    }
  </body>
</html>
